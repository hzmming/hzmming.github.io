(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{514:function(s,t,e){"use strict";e.r(t);var i=e(4),a=Object(i.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[e("em",[s._v("本文为张鑫旭课程的笔记整理（https://www.imooc.com/learn/643）")])]),s._v(" "),e("h3",{attrs:{id:"基本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本"}},[s._v("#")]),s._v(" 基本")]),s._v(" "),e("p",[s._v("表示当元素发生重叠时，谁的层级更高，谁盖在上面")]),s._v(" "),e("p",[e("strong",[s._v("z-index只适用于定位元素（css2.1，css3有些特殊属性）")])]),s._v(" "),e("p",[s._v("有3种值")]),s._v(" "),e("ul",[e("li",[s._v("auto (自动，默认值)")]),s._v(" "),e("li",[s._v("(整数)")]),s._v(" "),e("li",[s._v("inherit (继承)")])]),s._v(" "),e("p",[s._v("整数值可以是正值，负值，或0。数值越大，元素也就越靠近观察者。 数值越小，元素看起来也就越远。")]),s._v(" "),e("h3",{attrs:{id:"层叠上下文-stacking-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文-stacking-context"}},[s._v("#")]),s._v(" 层叠上下文(stacking context)")]),s._v(" "),e("p",[s._v("每一个网页都有一个默认的层叠上下文。 这个层叠上下文（桌子）的根源就是html元素")]),s._v(" "),e("p",[s._v("层叠顺序只在当前层叠上下文有效，两个层叠上下文之间的元素，不具有可比性，比的是其层叠上下文的层叠顺序")]),s._v(" "),e("p",[s._v("什么意思呢？其层叠上下文本身也是作为一个元素在某个层叠上下文内，至少还有个最顶级的根层叠上下文html元素不是么？")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<div style="z-index=1">\n    <div style="z-index=9999"></div>\n</div>\n<div style="z-index=2">\n    <div style="z-index=-1"></div> \x3c!--虽然是-1，但我还是能盖在你9999上面，哼--\x3e\n</div>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("3种情况，会生成层叠上下文")]),s._v(" "),e("ul",[e("li",[s._v("html元素（根层叠上下文）")]),s._v(" "),e("li",[s._v("z-index为数值的定位元素")]),s._v(" "),e("li",[s._v("其他属性【看最后的css3特殊】")])]),s._v(" "),e("p",[s._v("inherit不知道会不会形成，有点忘了，看视频确认下！！！")]),s._v(" "),e("h3",{attrs:{id:"层叠顺序-stacking-order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠顺序-stacking-order"}},[s._v("#")]),s._v(" 层叠顺序(stacking order)")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/52256796.jpg",alt:"img"}})]),s._v(" "),e("p",[s._v("（注意：此处的z-index:auto或0是生效的z-index，如定位元素）")]),s._v(" "),e("p",[s._v("为什么是这个顺序呢？可以看红字，内容当然要在布局之上，再在装饰之上")]),s._v(" "),e("p",[s._v("同一层级当然是后者居上")]),s._v(" "),e("p",[s._v("题外话：平常我们说，使用absolute定位，元素会脱离文档流，并盖在其它元素之上，本质上是什么决定了其覆盖顺序？答案是因为absolute使得z-index（默认值auto）生效，使其跑到位于正z-index之下的第二高位置")]),s._v(" "),e("h3",{attrs:{id:"定位元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定位元素"}},[s._v("#")]),s._v(" 定位元素")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<div style="position: relative;"></div>\n<div></div>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("div变成定位元素后，就可以反盖在“后者居上”的div，这是为什么呢？")]),s._v(" "),e("p",[s._v("z-index默认值为auto，设了定位后，z-index就生效了")]),s._v(" "),e("p",[s._v("相当于在"),e("strong",[s._v("7层层叠顺序")]),s._v("的"),e("strong",[s._v("第2层")]),s._v("，当然比block块级元素层级高")]),s._v(" "),e("h3",{attrs:{id:"z-index-auto-与-z-index-0的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#z-index-auto-与-z-index-0的区别"}},[s._v("#")]),s._v(" z-index: auto 与 z-index: 0的区别")]),s._v(" "),e("p",[s._v("相同：在同一层叠上下文中，这两个的层叠顺序是一样的，也就是符合后者居上")]),s._v(" "),e("p",[s._v("区别在于，z-index: 0会形成层叠上下文（注意：是生效的z-index，不管你是用定位还是css3新特性）")]),s._v(" "),e("h3",{attrs:{id:"父亲想要盖过儿子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父亲想要盖过儿子"}},[s._v("#")]),s._v(" 父亲想要盖过儿子")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<div>\n    <div style="position: relative; z-index: -1"></div>\n</div>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("父亲只要不设置z-index，儿子设置z-index为-1，并使其生效，儿子就会跑到父亲下面")]),s._v(" "),e("p",[s._v("为什么呢？")]),s._v(" "),e("p",[s._v("父亲z-index默认为auto不生成层叠上下文，所以父亲只是个普通元素，儿子设了z-index，那儿子的层叠顺序是在哪个层叠上下文呢？往上找（有点像absolute定位），直至根元素html，默认的层叠上下文")]),s._v(" "),e("h3",{attrs:{id:"css3特殊"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css3特殊"}},[s._v("#")]),s._v(" css3特殊")]),s._v(" "),e("p",[s._v("无需定位，也可以生成层级上下文，层级顺序和z-index:auto/0平级")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/53464031.jpg",alt:"img"}})]),s._v(" "),e("ol",[e("li",[s._v("z-index值不为auto的flex项（父元素display:flex|inline-flex）")]),s._v(" "),e("li",[s._v("元素的opacity值不是1")]),s._v(" "),e("li",[s._v("元素的transform值不是none")]),s._v(" "),e("li",[s._v("元素的mix-blend-mode值不是normal")]),s._v(" "),e("li",[s._v("元素的filter值不是none（此处指的时css3的filter）")]),s._v(" "),e("li",[s._v("元素的isolation值是isolate")]),s._v(" "),e("li",[s._v("position: fixed声明（部分浏览器，比如chrome。如果是firefox好像还是要和z-index值结合）")]),s._v(" "),e("li",[s._v("will-change指定的属性值为上面任何一个")]),s._v(" "),e("li",[s._v("元素的-webkit-overflow-scrolling设为touch（这个是移动端的）")])]),s._v(" "),e("p",[s._v("具体可看张鑫旭视频教程https://www.imooc.com/video/11629 第六章《其它css属性与层叠上下文》")])])}),[],!1,null,null,null);t.default=a.exports}}]);